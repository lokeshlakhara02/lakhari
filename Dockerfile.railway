# Railway.app Free Tier Optimized Dockerfile
FROM node:18-alpine AS base

# Set Railway-specific environment variables
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=400 --optimize-for-size"
ENV RAILWAY_ENVIRONMENT=production
ENV RAILWAY_OPTIMIZATION=true

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci --only=production --no-audit --no-fund

# Build stage
FROM base AS builder
WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci --no-audit --no-fund

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM base AS runner
WORKDIR /app

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server
COPY --from=builder /app/shared ./shared
COPY --from=deps /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./

# Copy Railway-specific files
COPY railway-start.js ./
COPY railway-config.json ./
COPY railway.json ./

# Set ownership
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application with Railway optimizations
CMD ["node", "railway-start.js"]
